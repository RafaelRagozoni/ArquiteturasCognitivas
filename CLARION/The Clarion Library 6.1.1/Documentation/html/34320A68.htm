<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>MetaCognitiveModule.MetaCognitiveModuleParameters Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="MetaCognitiveModule.MetaCognitiveModuleParameters class" />
    <meta name="System.Keywords" content="Clarion.Framework.Templates.MetaCognitiveModule.MetaCognitiveModuleParameters class" />
    <meta name="System.Keywords" content="MetaCognitiveModule.MetaCognitiveModuleParameters class, about MetaCognitiveModule.MetaCognitiveModuleParameters class" />
    <meta name="Microsoft.Help.F1" content="Clarion.Framework.Templates.MetaCognitiveModule.MetaCognitiveModuleParameters" />
    <meta name="Microsoft.Help.Id" content="T:Clarion.Framework.Templates.MetaCognitiveModule.MetaCognitiveModuleParameters" />
    <meta name="Description" content="This is parameters class for the class" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <link rel="stylesheet" type="text/css" href="../styles/Presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"> </script>
    <meta name="container" content="Clarion.Framework.Templates" />
    <meta name="file" content="34320A68" />
    <meta name="guid" content="34320A68" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="T:Clarion.Framework.Templates.MetaCognitiveModule.MetaCognitiveModuleParameters" />
      <MSHelp:TOCTitle Title="MetaCognitiveModule.MetaCognitiveModuleParameters Class" />
      <MSHelp:RLTitle Title="MetaCognitiveModule.MetaCognitiveModuleParameters Class (Clarion.Framework.Templates)" />
      <MSHelp:Keyword Index="A" Term="T:Clarion.Framework.Templates.MetaCognitiveModule.MetaCognitiveModuleParameters" />
      <MSHelp:Keyword Index="A" Term="frlrfClarionFrameworkTemplatesMetaCognitiveModuleMetaCognitiveModuleParametersClassTopic" />
      <MSHelp:Keyword Index="K" Term="MetaCognitiveModule.MetaCognitiveModuleParameters class" />
      <MSHelp:Keyword Index="K" Term="Clarion.Framework.Templates.MetaCognitiveModule.MetaCognitiveModuleParameters class" />
      <MSHelp:Keyword Index="K" Term="MetaCognitiveModule.MetaCognitiveModuleParameters class, about MetaCognitiveModule.MetaCognitiveModuleParameters class" />
      <MSHelp:Keyword Index="F" Term="Clarion.Framework.Templates.MetaCognitiveModule.MetaCognitiveModuleParameters" />
      <MSHelp:Attr Name="HelpPriority" Value="2" />
      <MSHelp:Attr Name="APIType" Value="Managed" />
      <MSHelp:Attr Name="APILocation" Value="ClarionLibrary.dll" />
      <MSHelp:Attr Name="APIName" Value="Clarion.Framework.Templates.MetaCognitiveModuleParameters" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="Abstract" Value="This is parameters class for the class" />
      <MSHelp:Attr Name="AssemblyVersion" Value="6.1.1.0" />
    </xml>
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">Clarion Library 6.1.1</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">MetaCognitiveModule<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>MetaCognitiveModuleParameters Class</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="DB5EC8BD.htm">MetaCognitiveModule Class</a> <a href="BA2F21CE.htm">Members</a> <a href="#exampleToggle" onclick="OpenSection(exampleToggle)">Example</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('clarion.support@gmail.com','Clarion Library 6.1.1','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">Send Feedback</a></span></td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <span style="color: DarkGray">
          <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p>
        </span>
        <div class="summary">
            This is parameters class for the <a href="DB5EC8BD.htm">MetaCognitiveModule</a> class
            </div>
        <p />
        <b>Namespace:</b> <a href="5CEA9B8.htm">Clarion.Framework.Templates</a><br /><b>Assembly:</b> <span sdata="assembly">ClarionLibrary</span> (in ClarionLibrary.dll) Version: 6.1.1.0 (6.1.1.0)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">MetaCognitiveModuleParameters</span></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p>This class contains all of the parameters that may be used by the <a href="DB5EC8BD.htm">MetaCognitiveModule</a> class. All classes that extend <a href="DB5EC8BD.htm">MetaCognitiveModule</a> 
            should also contain their own parameters class that extends this class and adds any parameters that are used by those classes. This is how all of the "built-in" modules 
            within the Clarion Library have been implemented. It is <b>HIGHLY</b> recommended that users defining their own (custom) module follow this convention as well.
            Details on how to implement a parameters class for a custom module can be found in the <i>Developer Tutorial</i> upon request.</p><div class="alert"><table><tr><th><img src="../icons/alert_note.gif" title="Note" /> <b>Note</b></th></tr><tr><td><p>The parameters classes can be found throughout the Clarion Library whenever a class contains parameters that may be set by a user.
            This concept was implemented to allow for some "special capabilities" and also to clean-up/streamline parameter usage throughout the system. The parameters classes 
            enable parameters to be adjusted both locally and globally. In general, global parameter changes are performed statically through the <span class="code">GlobalParameters</span> property
            and local parameter changes are performed on single instances through the <span class="code">Parameters</span> property.</p><b>Examples demonstrating how parameter adjustments may be performed using both methods can be found in the examples section.</b></td></tr></table></div><div class="alert"><table><tr><th><img src="../icons/alert_note.gif" title="Note" /> <b>Note</b></th></tr><tr><td>Global parameter settings are <b>ONLY</b> applicable prior to the initialization of an instance of a module. During the initialization process,
            the global parameter settings are used to set the "default" values of the local parameters for a module. Once initialized, the module will only use the local parameters. 
            Therefore, global parameter changes <b>SHOULD ALWAYS</b> be performed <b>BEFORE</b> instances of a module are initialized.</td></tr></table></div><p><b><i>Copyright 2011.</i> Nicholas Wilson</b></p></div><h1 class="heading"><span onclick="ExpandCollapse(exampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(exampleToggle, event)" tabindex="0"><img id="exampleToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Examples</span></h1><div id="exampleSection" class="section" name="collapseableSection" style="">
            Suppose you wanted to change the <a href="847B969E.htm">"PERFORM_REFINEMENT"</a> parameter for
            a single instance of a class derived from <a href="DB5EC8BD.htm">MetaCognitiveModule</a>. This constitutes a "local" parameter change and is accomplished as follows:
            <span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve">SomeMetaCognitiveModuleSubclass mod;

<span class="highlight-comment">// Elided code containing the initialization of mod using the &lt;see cref="T:Clarion.AgentInitializer" /&gt;</span>

mod.Parameters.PERFORM_REFINEMENT = <span class="highlight-keyword">true</span>;     <span class="highlight-comment">//Note that PERFORM_REFINEMENT is already true by default, so this doesn't actually change anything.</span></pre></div></span>
            Now, suppose instead that you wanted to change the <a href="847B969E.htm">"PERFORM_REFINEMENT"</a> parameter for
            all instances of all classes derived from <a href="DB5EC8BD.htm">MetaCognitiveModule</a>. This constitutes a "global" (or <span class="code">static</span>, in programming terms) 
            parameter change and is accomplished as follows:
            <span id="cbc_2" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve">MetaCognitiveModule.GlobalParameters.PERFORM_REFINEMENT = <span class="highlight-keyword">false</span>;

<span class="highlight-comment">// Elided code containing the initialization of particular MetaCognitiveModule instances (as was demonstrated above)</span></pre></div></span>
            Furthermore, suppose you wanted to change the <a href="847B969E.htm">"PERFORM_REFINEMENT"</a> parameter for ONLY those modules
            that are derived from a specific subclass of <a href="DB5EC8BD.htm">MetaCognitiveModule</a>. This can be accomplished in much the same way as was demonstrated above:
            <span id="cbc_3" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve">SomeClarionComponentSubclass.GlobalParameters.PERFORM_REFINEMENT = <span class="highlight-keyword">false</span>;

<span class="highlight-comment">// Elided code containing the initialization of particular MetaCognitiveModule instances (as was demonstrated above)</span></pre></div></span><div class="alert"><table><tr><th><img src="../icons/alert_caution.gif" title="Caution note" /> <b>Caution</b></th></tr><tr><td><p>Changing a parameter globally at a specific point on the inheritance hierarchy (as was demonstrated above) requires that the parameter in question be 
            overridden (or hidden) at that point in the hierarchy. In other words, although all parameters defined within the base classes of a subclass of 
            <a href="DB5EC8BD.htm">MetaCognitiveModule</a> are globally changeable at any point in the hierarchy, if the subclass does not override (or hide) a parameter, 
            then <b>ANY</b> change made globally to that parameter will be applied at the level where that parameter was last overridden, regardless of the particular subclass
            in which the global parameter change is initiated.</p>
            For example, suppose there is a subclass of <a href="DB5EC8BD.htm">MetaCognitiveModule</a> called "SomeOtherMetaCognitiveModule" whose parameters class extends 
            <span class="code">MetaCognitiveModuleParameters</span> but does not override <a href="847B969E.htm">PERFORM_REFINEMENT</a>. In this case, performing the following 
            global parameter change:
            <span id="cbc_4" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve">SomeOtherMetaCognitiveModule.GlobalParameters.PERFORM_REFINEMENT = <span class="highlight-keyword">false</span>;</pre></div></span>
            will actually change the <a href="847B969E.htm">"PERFORM_REFINEMENT"</a> parameter at the <span class="code">MetaCognitiveModuleParameters</span> 
            level. In other words, the command above does the same thing as:
            <span id="cbc_5" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve">MetaCognitiveModule.GlobalParameters.PERFORM_REFINEMENT = <span class="highlight-keyword">false</span>;</pre></div></span><p>Keep this in mind when you are performing global parameter changes as it could cause unintended consequences during runtime. For the "built-in" modules in the 
            Clarion Library, if a parameter was not overridden at a certain point in the inheritance hierarchy, then, in all likelihood, it is not used by that module.</p><p> As a general rule of thumb (when creating a custom module), if your module makes use of a parameter that was defined in a base class of that module, then 
            you should override that parameter in your module's parameters class. This will allow users of your module to globally change that parameter at 
            either the base class level or the level of your module. Details on how to correctly implement this can be found in the <i>Developers Tutorial</i> upon request.</p></td></tr></table></div></div><h1 class="heading"><span onclick="ExpandCollapse(familyToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(familyToggle, event)" tabindex="0"><img id="familyToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Inheritance Hierarchy</span></h1><div id="familySection" class="section" name="collapseableSection" style=""><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</a><br />  <span class="selflink">Clarion.Framework.Templates<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>MetaCognitiveModule<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>MetaCognitiveModuleParameters</span><br />    <a href="CCF39A78.htm">Clarion.Framework.Extensions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>GoalSelectionModule<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>GoalSelectionModuleParameters</a><br />    <a href="BC86F58F.htm">Clarion.Framework.Extensions<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ParameterSettingModule<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ParameterSettingModuleParameters</a><br /></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="BA2F21CE.htm">MetaCognitiveModule<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>MetaCognitiveModuleParameters Members</a></div><div class="seeAlsoStyle"><a href="5CEA9B8.htm">Clarion.Framework.Templates Namespace</a></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
        </div>
        <A NAME="feedback"></A>
        <span id="fb" class="feedbackcss"></span>
        <p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:clarion.support%40gmail.com?Subject=Clarion Library 6.1.1">clarion.support@gmail.com</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p />© (2013) Nicholas Wilson</div>
    </div>
  </body>
</html>